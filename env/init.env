##################################################################
# init.env
# This is the driver for the QSH subsystem
# Powered by BoltonMedia Internet Group
# Version 2.9.0
#################################################################

##################################################################
# Set system behavior parameters
##################################################################
set \
+o nounset \
-o ignoreeof \
+o noclobber \
-o nolog \
-o vi

##################################################################
# System and Special Defaults
##################################################################

# Screen Text Accenting
export BL="[1m"
export NL="[0m"
export RL="[7m" 
export UL="[4m" 
export XT="]0;"
export XE="\c"

typeset -a aQshModules=()
export sQshInit=${HOME}/qsh/env
export sQshErrLog=${sQshInit}/../log/qsh_err.log
export aQshModules

###############################################
# Function Definitions
# PUBLIC
# doInclude
# INTERNAL ADMIN
# INTERNAL SETTER
# GETTER
###############################################
doInclude()
{
	typeset src=$1
	typeset clr=$2
	typeset nCount=0
	if (( clr ))
	then
		unset aQshModules
	else
		nCount=${#aQshModules[*]}
	fi
	if (( nCount != 0 ))
	then
		(( nCount=nCount + 1 ))
	fi
	shift;
	shift;
	if [ ! -d ${src} ]
	then
		echo "[ERROR] Cannot Find Required Source Directories"
		return 12345
	else
		for i in $(echo "$*")
		do
      if [ -f ${src}/${i} ]
      then
			  . ${src}/${i} 2>${sQshErrLog} 
			  nStatus=$?
			  if (( $? == 0 ))
			  then
			  	aQshModules[${nCount}]="${i}"
			  	(( nCount=${#aQshModules[*]} + 1 ))
			  fi
      else
        echo "[WARN] Cannot Find ${src}/${i}"
      fi
		done
	export aQshModules
	fi
}

###############################################
# Module Loading
###############################################
doInclude ${sQshInit} 1 "defs.env errep.env qobj.env admin.env paths.env tools.env local.env" 
#doInclude ${sQshInit} 1 "defs.env errep.env qobj.env admin.env" \
#                           "paths.env tools.env xwin.env"

# Setup system configuration files and admin specifics
#admin_setSchemes ${sQshInit}/../dat/schemes.dat
#admin_setFonts ${sQshInit}/../dat/fonts.dat
#admin_setColors ${sQshInit}/../dat/rgb.dat

admin_setCleanPath /tmp /var/tmp; 

# Purge logs and error files
#tools_clean -s -f xwin_*.out
#tools_clean -s -f nohup.out
#tools_clean -s -f ${sQshErrLog}

# Do updates
#if [ -f ${HOME}/qsh.tar ]
#then
#	tools_explode ${HOME}/qsh.tar; qsh
#fi

###############################################
# Set up work site specific commands
###############################################
qp_setPath html /var/www/html
qp_setPath el /var/www/html/elombre
qp_setPath tasc /var/www/html/elombre/wordpress/wp-content/plugins/tasc
qp_setPath onblogs /var/www/html/onblogs
qp_setPath ob2 /var/www/html/onblogs2
qp_setPath cg /var/www/html/cg/
qp_setPath spu /var/www/html/sporturls/
qp_setPath webprojects /var/www/html/projects/

# set title as dynamic path on putty windows
ptitle
