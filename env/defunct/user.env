alias debug="export Debug_Mode=1"
alias nodebug="export Debug_Mode=0"

qp_setPath matt /prod/users/capdev/u49546
qp_setPath subbu /prod/users/capdev/u59340
qp_setPath gorman /prod/users/capdev/u49744
qp_setPath sriram /prod/users/capdev/u92343
qp_setPath rama /prod/users/capdev/u92530
qp_setPath sai /prod/users/capdev/u92584

function user_getRegion 
{
	typeset user_region=$1
	typeset sRegionPath=/prod/home01/appl
	typeset user_regions=""
	typeset nStatus=0
	typeset sSpaces="                                                "

	# Gather region information on host
	for i in $(/usr/bin/ls -d ${sRegionPath}/*cap*)
	do
		if [ -d ${i} ] &&
			 [ -f ${i}/admin/batch.profile ]
		then
			user_regions[${#user_regions[*]}]="${i}"
		fi
	done

	# Clean up unecessary variables
	unset sRegionPath

	if (( $# == 0 ))
	then
		print "${UL}Available Regions${NL}"
		for i in $(print ${user_regions[*]})
		do
			print "${BL}$(basename ${i})${NL}"	
		done
	fi	
	
	if (( $# == 1 ))
	then
		for i in $(print ${user_regions[*]})
		do
			sRegion=$(basename ${i})
			if [ ${user_region} = "${sRegion}" ]
			then
				clear; . ${i}/admin/batch.profile; typeset -u user_region=${sRegion}
				sRegDetail=$(cat ${i}/admin/batch.profile|grep -v "^#"|awk '{print $2}')
				print "${BL}The following values are available in ${sRegion}:${NL}"
				if [ -z "${xwin_TITLE}" ]
				then
					print "${XT}[You Are In: ${user_region}]${XE}" 
				else
					print "${XT}${xwin_TITLE}${sSpaces}[You Are In: ${user_region}]${XE}" 
				fi
				print "${sRegDetail}\n"
				nStatus=0 
				break;
			else
				nStatus=1	
			fi
		done
	fi

	if (( nStatus != 0 ))
	then
		errep "Unrecognized region ${user_region}" 3 ERROR
	fi
}
alias region=user_getRegion

function user_sendUpd
{
	tar cvf ${HOME}/qsh.tar ${HOME}/qsh
	cp $sQshInit/../dat/.update $HOME/.netrc; chmod 700 $HOME/.netrc
	machine=$(grep machine $HOME/.netrc | awk '{print $2}')
	for i in $(print "${machine}")
	do
		ftp ${i}
	done
	rm $HOME/.netrc
	rm $HOME/qsh.tar
}	
alias upd=user_sendUpd

alias xl="nohup /usr/contrib/bin/X11/xload -bg ${colors[$(print $xwin_SCHEME|cut -d'|' -f1)]} -fg ${colors[$(print $xwin_SCHEME|cut -d'|' -f2)]} -hl ${colors[$(print $xwin_SCHEME|cut -d'|' -f2)]} -label \"$(hostname)'s Sluggishness\" -display ${xwin_DISPLAY} &"

function _patch
{
	typeset nStatus=0
	typeset sFullQSH=~u90659/qsh
	if [ -d ${HOME} ]
	then

		if [ -f ${sFullQSH}/dat/patch.dat ]
		then
			. ${sFullQSH}/dat/patch.dat
		else
			errep "Cannot update ${sFullQSH}/dat/patch.dat does not exist" 1 ERROR
			nStatus=1
		fi
	
		if (( nStatus == 0 ))
		then
			errep "Updating ${HOME}/qsh to version ${version}" 0 AUDIT
			(( nSize = ${#module[*]} ))
			(( nCount = 0 ))
		
			while ((( nCount < nSize )) && (( nStatus == 0 )))
			do
				eval "${module[${nCount}]}";
				errep "Updating $(basename $source) ..." 0 AUDIT
				cp $source $target
				(( nCount = nCount + 1 ))
			done
			errep "Please execute ${BL}qsh${NL} to activate changes" 0 AUDIT
		fi
	fi
}

alias cc_submit="export CCASE_SUBMIT='y'"
alias cc_views="ct lsview | grep qbol1409"
alias cc_colist="ct lsco | grep reserved | awk '{print \$5}' | sed 's/\"//g'"
alias cc_ci='ct ci'
